######################################################################################################                          	      Hide/Unhide
                          	  Image Steganography
                             
                             by Solomon Jennings
######################################################################################################

INTRODUCTION:
#############
This following set of tools written in C  for linux that allows for the hiding of
a message with images.

Currently supported images are:
Standard Binary PPM
24 bit BMPs

To try for yourself after compiling:

printf "This is a hidden message!" | ./hide images/cross.pbm output.ppm
./unhide output.ppm


COMPILING:
############
GCC is used to compile and compilation should be supported up until C99
The program can be complied in the following ways:

Requires the SDL2 Library to compile

make clean			  	- cleans any previous compilation and removes any output files

make all  				- makes both hide and unhide
make hide 				- makes hide only
make unhide 			- makes unhide only

make alldebug 			- makes both hide and unhide with debug output
make hidedebug  		- makes hide with debug output
make unhidedebug 		- makes unhide with debug output

HIDING:
###########
****************************************************************
To hide a message within a image:
****************************************************************
./hide imagename outputfilename

Example:
./hide example.ppm output.ppm

The end of the message is marked up a EOF character. This can be enter into the terminal by presseing ctrl+D
sometimes it takes a couple of ctrl+Ds to work. Dunno why

****************************************************************
To hide a message and show the before and after image:
****************************************************************
./hide -s imagename outputfilename

Example:
./hide -s example.ppm output.ppm

To close the close when complete either click the X or push any key on the display window

****************************************************************
To hide a message in multiple images:
****************************************************************
./hide -m numimages basename outputbase

Example:
./hide -m 5 images/example output/output

This will hide the message across 5 ppm images from the input directory starting from images/example-000.ppm to
images/example-004.ppm

****************************************************************
To hide a message in parellel:
****************************************************************
./hide -p infofile

Example:
./hide -p multiimage.txt

This will hide multi messages in parallel across multiple files
format for the txt file is :
text.txt image1.ppm output1.ppm
text2.txt image2.ppm output2.ppm

****************************************************************
To hide a message in a directory of files
****************************************************************
./hide -d inputdirectory outputdirectory

Example:
./hide -d inputimages/ outputimages/

This will hide a message in a directory of images. **WARNING** If an unsupported file is in the directory
it will cause an unsupported image error.
Both BMP and PPM are supported in this mode

UNHIDING:
###########
****************************************************************
To unhide a message from an image:
****************************************************************
./unhide filename

Example:
./unhide output.ppm

****************************************************************
To unhide a message from multiple images:
****************************************************************
./unhide -m numfiles basename

Example:
./unhide -m 5 outputbase

****************************************************************
To unhide a message from a directory of images
****************************************************************
./unhide -d directory

Example:
./unhide -d output/


If the image does not contain a message then the output message may be garbled or not exist at all.

The output of the message will be start and end with a line of '########################'

SUPPORTED FUNCTIONALITY:
########################

noswitch: Hide in one image
-m: Hide in multiple images
-s: Show before and after images
-p: hide in images in parallel
-d: hide message in a directory of images


Both hiding and unhiding a message within both a 24Bit (255 depth) standard PPM image and 24 Bit BMP images.
A BMP with an alpha channel or compression is not supported.

Any non malformed header for both image types is supported. This includes any number of
comments within the PPM format.

Implementation is file extension agnostic. Image types are dependent on the magic number of the file header.

Error detection is supported and should detect any incomplete image pixel map, incorrect headers, malformed headers and
message lengths which are too long.

Piping is supported. Example
printf "Test" | ./hide input.ppm output.ppm
